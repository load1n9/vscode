name: Whistle
scopeName: source.whistle
patterns:
  - include: "#keywords"
  - include: "#strings"
  - include: "#comments"
repository:
  keywords:
    patterns:
      - name: keyword.control.whistle
        match: \b(export|fun|return|if|while|loop|break|continue|var|val)\b
      - name: keyword.control.import.whistle
        match: \b(import|from)\b
      - name: keyword.control.type.whistle
        match: "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(i32|i64|f32|f64|string|char|bool|none)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
  strings:
    patterns:
      - include: "#double"
      - include: "#single"
    repository:
      double:
        name: string.quoted.double.whistle
        begin: '"'
        end: '"'
        patterns:
          - { name: constant.character.escape.whistle, match: \\. }
      single:
        name: string.quoted.single.whistle
        begin: "'"
        end: "'"
        patterns:
          - { name: constant.character.escape.whistle, match: \\. }
  comments:
    patterns:
      - include: "#block"
      - include: "#single-line"
    repository:
      block:
        name: comment.block.whistle
        begin: "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?"
        beginCaptures:
          "1":
            name: punctuation.definition.comment.whistle
          "2":
            name: storage.type.internaldeclaration.whistle
          "3":
            name: punctuation.decorator.internaldeclaration.whistle

        end: "\\*/"
        endCaptures:
          "0":
            name: punctuation.definition.comment.whistle
      single-line:
        name: comment.singleline.whistle
        begin: "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)"
        beginCaptures: 
          "1":
            name: punctuation.whitespace.comment.leading.whistle
          "2":
            name: comment.line.double-slash.whistle
          "3":
            name: punctuation.definition.comment.whistle
          "4":
            name: storage.type.internaldeclaration.whistle
          "5":
            name: punctuation.decorator.internaldeclaration.whistle
        end: "(?=^)"

